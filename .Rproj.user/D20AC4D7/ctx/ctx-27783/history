remove_empty(c("rows", "cols")) %>%
select(-starts_with("delta")) %>%
select(-comments)
}
penguins_clean <- cleaning_penguin_columns(penguins_raw)
# writing the clean data to a csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
file.create(here("function", cleaning.R))
file.create(here("function", "cleaning.R"))
file.create(here("functions", "cleaning.R"))
# loading our function file
source(here("functions", "cleaning.R"))
# data was loaded in as part of the library
View(penguins_raw)
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
penguins_raw <- read.csv("~/Oxford/Year 3/Coursework/R work/Coding Tuition/PenguinProject/data/penguins_raw.csv")
View(penguins_raw)
penguins_clean <- cleaning_penguin_columns(penguins_raw, c("comments - pseudocode for the addition of new details"))
# writing the clean data to a csv
write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# use of the made function to clean code
penguins_clean <- cleaning_penguin_columns(penguins_raw)
cleaning_penguin_columns <- function(raw_data){
print("Cleaned anmes, removed comments, removed empty rows and cols, removed delta")
raw_data %>%
clean_names() %>%
shorten_species() %>%
remove_empty(c("rows", "cols")) %>%
select(-comments) %>%
select(-starts_with("delta"))
}
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"))
# using functions from the function script ----
cleaning_penguin_columns <- function(raw_data){
print("Cleaned anmes, removed comments, removed empty rows and cols, removed delta")
raw_data %>%
clean_names() %>%
shorten_species() %>%
remove_empty(c("rows", "cols")) %>%
select(-comments) %>%
select(-starts_with("delta"))
}
# using function ----
colnames(penguins_raw)
penguins_clean <- cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"))
# using functions from the function script ----
cleaning_penguin_columns <- function(raw_data){
print("Cleaned anmes, removed comments, removed empty rows and cols, removed delta")
raw_data %>%
clean_names() %>%
shorten_species() %>%
remove_empty(c("rows", "cols")) %>%
select(-comments) %>%
select(-starts_with("delta"))
}
# using function ----
colnames(penguins_raw)
penguins_clean <- cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"), row.names = FALSE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"))
# using functions from the function script ----
cleaning_penguin_columns <- function(raw_data){
print("Cleaned anmes, removed comments, removed empty rows and cols, removed delta")
raw_data %>%
clean_names() %>%
shorten_species() %>%
remove_empty(c("rows", "cols")) %>%
select(-comments) %>%
select(-starts_with("delta"))
}
# using function ----
colnames(penguins_raw)
penguins_clean <- cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
View(penguins_raw)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"), check.names = FALSE)
# using functions from the function script ----
cleaning_penguin_columns <- function(raw_data){
print("Cleaned anmes, removed comments, removed empty rows and cols, removed delta")
raw_data %>%
clean_names() %>%
shorten_species() %>%
remove_empty(c("rows", "cols")) %>%
select(-comments) %>%
select(-starts_with("delta"))
}
# using function ----
colnames(penguins_raw)
penguins_clean <- cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
View(penguins_raw)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading of functions file ----
source(here("functions", "cleaning.R"))
# loading of raw data ----
penguins_raw <- read.csv(here("data", "penguins_raw.csv"), row.names = FALSE)
install.packages("renv")
# looking at renv
renv::init()
renv::snapshot()
renv::diagnostics()
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
library(dplyr)
# loading our function file
source(here("functions", "cleaning.R"))
here::here()
# graphing tutorial ----
penguins_clean <- read_csv(here("data", "penguins_clean.csv"))
View(penguins_clean)
flipper_boxplot <- ggplot(
data = penguins_clean,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot()
flipper_boxplot
# sorting missing values
# should only remove the missing values from the column of interest
# Subset the columns: species and flipper_length_mm
penguins_flippers <- select(penguins_clean, species, flipper_length_mm)
penguins_flippers.head()
head(penguins_flippers)
# sorting missing values
# should only remove the missing values from the column of interest
# Subset the columns: species and flipper_length_mm
penguins_flippers <- select(penguins_clean, species, flipper_length_mm) %>% drop_na()
head(penguins_flippers)
colnames(penguins_flippers)
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot()
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(
aes((fill = species))
)
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(
aes((color = species))
)
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(
aes((color = species),
show.legend = FALSE)
)
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
show.legend = FALSE)
)
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
show.legend = FALSE)
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
show.legend = FALSE) +
geom_jitter()
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
show.legend = FALSE) +
geom_jitter(aes(colour = species),
show.legend = FALSE)
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
show.legend = FALSE) +
geom_jitter(aes(colour = species),
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0
))
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0
))
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0
))
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
species_colours <- c("Adelie" = "darkorange",
"Chinstrap" = "purple",
"Gentoo" = "cyan4")
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours)
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species_colours),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species_colours),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
shorten_species <- function(penguins_data) {
penguins_data %>%
mutate(species = case_when(
species == "Adelie Penguin (Pygoscelis adeliae)" ~ "Adelie",
species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap",
species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo"
))
}
penguins_flippers <- penguins_clean %>%
shorten_species() %>%
select(species, flipper_length_mm) %>%
drop_na()
species_colours <- c("Adelie" = "darkorange",
"Chinstrap" = "purple",
"Gentoo" = "cyan4")
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species_colours),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)")
flipper_boxplot
flipper_boxplot <- ggplot(
data = penguins_flippers,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)") +
theme_bw()
flipper_boxplot
# changing graph code into a function in a new file
source(here("functions", "plotting.R"))
plot_boxplot <- function(data, species_colours) {
data <- data %>%
drop_na(flipper_length_mm)
# now make the plot
flipper_boxplot <- ggplot(
data = data,
aes(x = species,
y = flipper_length_mm)) +
geom_boxplot(aes(color = species),
width = 0.3,
show.legend = FALSE) +
geom_jitter(aes(colour = species),
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0)) +
scale_colour_manual(values = species_colours) +
labs(x = "Penguin species",
y = "Flipper length (mm)") +
theme_bw()
}
species_colours <- c("Adelie" = "darkorange",
"Chinstrap" = "purple",
"Gentoo" = "cyan4")
plot_boxplot(penguins_clean, species_colours)
plot_boxplot <- function(data,
x_column,
y_column,
x_label,
y_label,
colour_mapping) {
data <- data %>%
drop_na({{ y_column}})
# now make the plot
flipper_boxplot <- ggplot(
data = data,
aes(x = {{x_column}},
y = {{y_column}},
color = {{x_column}} )) +
geom_boxplot(aes(
width = 0.3,
show.legend = FALSE)) +
geom_jitter(aes(size = 1,
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0))) +
scale_colour_manual(values = colour_mapping) +
labs(x = x_label,
y = y_label) +
theme_bw()
}
species_colours <- c("Adelie" = "darkorange",
"Chinstrap" = "purple",
"Gentoo" = "cyan4")
plot_boxplot(penguins_clean, "species", "flipper_length_mm", "Penguin Species", "Flipper Length (mm)")
plot_boxplot <- function(data,
x_column,
y_column,
x_label,
y_label,
colour_mapping) {
data <- data %>%
drop_na({{ y_column}})
# now make the plot
flipper_boxplot <- ggplot(
data = data,
aes(x = {{x_column}},
y = {{y_column}},
color = {{x_column}} )) +
geom_boxplot(aes(
width = 0.3,
show.legend = FALSE)) +
geom_jitter(aes(size = 1,
alpha = 0.3,
show.legend = FALSE,
position = position_jitter(
width = 0.2,
seed = 0))) +
scale_colour_manual(values = colour_mapping) +
labs(x = x_label,
y = y_label) +
theme_bw()
}
species_colours <- c("Adelie" = "darkorange",
"Chinstrap" = "purple",
"Gentoo" = "cyan4")
plot_boxplot(penguins_flippers, "species", "flipper_length_mm", "Penguin Species", "Flipper Length (mm)")
plot_boxplot(penguins_clean, "species", "flipper_length_mm", "Penguin Species", "Flipper Length (mm)")
git remote add origin https://github.com/Felix-Smyth/PenguinProject.git
